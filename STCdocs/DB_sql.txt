-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema documentator
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema documentator
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `documentator` DEFAULT CHARACTER SET utf8 ;
USE `documentator` ;

-- -----------------------------------------------------
-- Table `documentator`.`unit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`unit` ;

CREATE TABLE IF NOT EXISTS `documentator`.`unit` (
  `unit_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `unit_title` VARCHAR(45) NOT NULL,
  `unit_parent_id` INT(10) UNSIGNED NULL,
  `unit_ratio` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`unit_id`),
  UNIQUE INDEX `id_UNIQUE` (`unit_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`category` ;

CREATE TABLE IF NOT EXISTS `documentator`.`category` (
  `category_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `category_title` VARCHAR(255) NOT NULL,
  `category_desc` VARCHAR(255) NULL,
  PRIMARY KEY (`category_id`),
  UNIQUE INDEX `category_id_UNIQUE` (`category_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`material`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`material` ;

CREATE TABLE IF NOT EXISTS `documentator`.`material` (
  `material_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `material_title` VARCHAR(255) NULL,
  `materil_price` DECIMAL(12,4) UNSIGNED NOT NULL,
  `material_article` VARCHAR(12) NULL,
  `material_category_id` INT(10) UNSIGNED NULL,
  `material_unit_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`material_id`),
  UNIQUE INDEX `material_id_UNIQUE` (`material_id` ASC),
  INDEX `fk_material_unit_idx` (`material_unit_id` ASC),
  INDEX `fk_material_category_idx` (`material_category_id` ASC),
  CONSTRAINT `fk_material_unit`
    FOREIGN KEY (`material_unit_id`)
    REFERENCES `documentator`.`unit` (`unit_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_material_category`
    FOREIGN KEY (`material_category_id`)
    REFERENCES `documentator`.`category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`recipe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`recipe` ;

CREATE TABLE IF NOT EXISTS `documentator`.`recipe` (
  `recipe_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Sealant formulation',
  `recipe_title` VARCHAR(255) NOT NULL,
  `recipe_note` MEDIUMTEXT NULL,
  `recipe_date` DATETIME NOT NULL,
  `recipe_update` DATETIME NOT NULL,
  `recipe_approved` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Approved / not approved recipe',
  PRIMARY KEY (`recipe_id`),
  UNIQUE INDEX `recipe_id_UNIQUE` (`recipe_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`mr`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`mr` ;

CREATE TABLE IF NOT EXISTS `documentator`.`mr` (
  `mr_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `mr_percentage` DECIMAL(5,2) UNSIGNED NOT NULL COMMENT 'Percentage of the content of this material in the recipe',
  `mr_recipe_id` INT(10) UNSIGNED NOT NULL,
  `mr_material_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`mr_id`),
  UNIQUE INDEX `idmaterial_to_recipe_UNIQUE` (`mr_id` ASC),
  INDEX `fk_mr_recipe_idx` (`mr_recipe_id` ASC),
  INDEX `fk_mr_material_idx` (`mr_material_id` ASC),
  UNIQUE INDEX `mr_recipe_aterial` (`mr_recipe_id` ASC, `mr_material_id` ASC),
  CONSTRAINT `fk_mr_recipe`
    FOREIGN KEY (`mr_recipe_id`)
    REFERENCES `documentator`.`recipe` (`recipe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mr_material`
    FOREIGN KEY (`mr_material_id`)
    REFERENCES `documentator`.`material` (`material_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`product` ;

CREATE TABLE IF NOT EXISTS `documentator`.`product` (
  `product_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `product_title` VARCHAR(255) NOT NULL,
  `product_capacity_hour` INT(10) UNSIGNED NOT NULL COMMENT 'productivity of current product per hour',
  `product_date` DATETIME NOT NULL,
  `product_update` DATETIME NOT NULL,
  `product_linear_meter` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `product_unit_id` INT(10) UNSIGNED NOT NULL,
  `product_price` DECIMAL(12,2) UNSIGNED NULL COMMENT 'Selling price',
  PRIMARY KEY (`product_id`),
  UNIQUE INDEX `product_id_UNIQUE` (`product_id` ASC),
  INDEX `fk_product_unit_idx` (`product_unit_id` ASC),
  CONSTRAINT `fk_product_unit`
    FOREIGN KEY (`product_unit_id`)
    REFERENCES `documentator`.`unit` (`unit_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`rp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`rp` ;

CREATE TABLE IF NOT EXISTS `documentator`.`rp` (
  `rp_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `rp_recipe_id` INT(10) UNSIGNED NOT NULL,
  `rp_product_id` INT(10) UNSIGNED NOT NULL,
  `rp_weight` DECIMAL(12,4) UNSIGNED NOT NULL COMMENT 'Weight of sealant per unit of product',
  `rp_unit_id` INT(10) UNSIGNED NOT NULL COMMENT 'Unit of measurement of weight',
  PRIMARY KEY (`rp_id`),
  UNIQUE INDEX `rp_id_UNIQUE` (`rp_id` ASC),
  UNIQUE INDEX `recipe_product` (`rp_recipe_id` ASC, `rp_product_id` ASC),
  INDEX `fk_rp_product_idx` (`rp_product_id` ASC),
  INDEX `fk_rp_unit_idx` (`rp_unit_id` ASC),
  CONSTRAINT `fk_rp_product`
    FOREIGN KEY (`rp_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rp_recipe`
    FOREIGN KEY (`rp_recipe_id`)
    REFERENCES `documentator`.`recipe` (`recipe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rp_unit`
    FOREIGN KEY (`rp_unit_id`)
    REFERENCES `documentator`.`unit` (`unit_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`pm`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`pm` ;

CREATE TABLE IF NOT EXISTS `documentator`.`pm` (
  `pm_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `pm_product_id` INT(10) UNSIGNED NOT NULL,
  `pm_material_id` INT(10) UNSIGNED NOT NULL,
  `pm_quantity` DECIMAL(12,4) UNSIGNED NOT NULL,
  `pm_unit_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`pm_id`),
  UNIQUE INDEX `pm_id_UNIQUE` (`pm_id` ASC),
  INDEX `fk_pm_unit_idx` (`pm_unit_id` ASC),
  INDEX `fk_pm_material_idx` (`pm_material_id` ASC),
  INDEX `fk_pm_product_idx` (`pm_product_id` ASC),
  UNIQUE INDEX `product_material` (`pm_product_id` ASC, `pm_material_id` ASC),
  CONSTRAINT `fk_pm_unit`
    FOREIGN KEY (`pm_unit_id`)
    REFERENCES `documentator`.`unit` (`unit_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pm_material`
    FOREIGN KEY (`pm_material_id`)
    REFERENCES `documentator`.`material` (`material_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pm_product`
    FOREIGN KEY (`pm_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`file`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`file` ;

CREATE TABLE IF NOT EXISTS `documentator`.`file` (
  `file_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `file_data` MEDIUMBLOB NOT NULL,
  `file_product_id` INT(10) UNSIGNED NOT NULL,
  `file_title` VARCHAR(255) NOT NULL,
  `file_desc` VARCHAR(255) NULL,
  PRIMARY KEY (`file_id`),
  UNIQUE INDEX `file_id_UNIQUE` (`file_id` ASC),
  INDEX `fk_file_product_idx` (`file_product_id` ASC),
  CONSTRAINT `fk_file_product`
    FOREIGN KEY (`file_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`pack`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`pack` ;

CREATE TABLE IF NOT EXISTS `documentator`.`pack` (
  `pack_id` INT(10) UNSIGNED NOT NULL,
  `pack_title` VARCHAR(255) NOT NULL,
  `pack_desc` VARCHAR(255) NULL,
  `pack_price` DECIMAL(12,4) UNSIGNED NOT NULL,
  PRIMARY KEY (`pack_id`),
  UNIQUE INDEX `pack_id_UNIQUE` (`pack_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`pap`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`pap` ;

CREATE TABLE IF NOT EXISTS `documentator`.`pap` (
  `pap_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `pap_pack_id` INT(10) UNSIGNED NOT NULL,
  `pap_product_id` INT(10) UNSIGNED NOT NULL,
  `pap_capacity` DECIMAL(12,2) UNSIGNED NULL,
  PRIMARY KEY (`pap_id`),
  UNIQUE INDEX `pap_id_UNIQUE` (`pap_id` ASC),
  INDEX `fk_pap_pack_idx` (`pap_pack_id` ASC),
  INDEX `fk_pap_product_idx` (`pap_product_id` ASC),
  INDEX `pack_product` (`pap_pack_id` ASC, `pap_product_id` ASC),
  CONSTRAINT `fk_pap_pack`
    FOREIGN KEY (`pap_pack_id`)
    REFERENCES `documentator`.`pack` (`pack_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pap_product`
    FOREIGN KEY (`pap_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`position`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`position` ;

CREATE TABLE IF NOT EXISTS `documentator`.`position` (
  `position_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `position_title` VARCHAR(255) NOT NULL,
  `position_desc` VARCHAR(255) NULL,
  `position_salary_hour` DECIMAL(12,2) UNSIGNED NULL COMMENT 'Salary per hour',
  PRIMARY KEY (`position_id`),
  UNIQUE INDEX `position_id_UNIQUE` (`position_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`pop`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`pop` ;

CREATE TABLE IF NOT EXISTS `documentator`.`pop` (
  `pop_pop` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `pop_position_id` INT(10) UNSIGNED NOT NULL,
  `pop_product_id` INT(10) UNSIGNED NOT NULL,
  `pop_num` DECIMAL(10,2) UNSIGNED NOT NULL COMMENT 'number workers on current position for  this product',
  PRIMARY KEY (`pop_pop`),
  UNIQUE INDEX `pop_pop_UNIQUE` (`pop_pop` ASC),
  INDEX `fk_pop_product_idx` (`pop_product_id` ASC),
  INDEX `fk_pop_position_idx` (`pop_position_id` ASC),
  UNIQUE INDEX `product_position` (`pop_position_id` ASC, `pop_product_id` ASC),
  CONSTRAINT `fk_pop_product`
    FOREIGN KEY (`pop_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pop_position`
    FOREIGN KEY (`pop_position_id`)
    REFERENCES `documentator`.`position` (`position_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`loss`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`loss` ;

CREATE TABLE IF NOT EXISTS `documentator`.`loss` (
  `loss_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `loss_title` VARCHAR(255) NOT NULL COMMENT 'Table of additional losses in the production of current product',
  `loss_desc` VARCHAR(255) NULL,
  PRIMARY KEY (`loss_id`),
  UNIQUE INDEX `loss_loss_UNIQUE` (`loss_id` ASC))
ENGINE = InnoDB
COMMENT = 'table for additional losses ';


-- -----------------------------------------------------
-- Table `documentator`.`lp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`lp` ;

CREATE TABLE IF NOT EXISTS `documentator`.`lp` (
  `lp_lp` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `lp_loss_id` INT(10) UNSIGNED NOT NULL,
  `lp_product_id` INT(10) UNSIGNED NOT NULL,
  `lp_percentage` DECIMAL(10,2) UNSIGNED NOT NULL,
  PRIMARY KEY (`lp_lp`),
  UNIQUE INDEX `lp_lp_UNIQUE` (`lp_lp` ASC),
  INDEX `fk_lp_loss_idx` (`lp_loss_id` ASC),
  INDEX `fk_lp_product_idx` (`lp_product_id` ASC),
  UNIQUE INDEX `loss_product` (`lp_loss_id` ASC, `lp_product_id` ASC),
  CONSTRAINT `fk_lp_loss`
    FOREIGN KEY (`lp_loss_id`)
    REFERENCES `documentator`.`loss` (`loss_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lp_product`
    FOREIGN KEY (`lp_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`other_expenses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`other_expenses` ;

CREATE TABLE IF NOT EXISTS `documentator`.`other_expenses` (
  `other_expenses_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `other_expenses_title` VARCHAR(255) NOT NULL,
  `other_expenses_desc` VARCHAR(255) NULL,
  `other_expenses_costs_hour` DECIMAL(12,4) UNSIGNED NOT NULL,
  PRIMARY KEY (`other_expenses_id`),
  UNIQUE INDEX `other_expenses_id_UNIQUE` (`other_expenses_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`op`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`op` ;

CREATE TABLE IF NOT EXISTS `documentator`.`op` (
  `op_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `op_other_id` INT(10) UNSIGNED NOT NULL,
  `op_product_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`op_id`),
  UNIQUE INDEX `op_id_UNIQUE` (`op_id` ASC),
  INDEX `fk_op_other_idx` (`op_other_id` ASC),
  INDEX `fk_op_product_idx` (`op_product_id` ASC),
  UNIQUE INDEX `other_product` (`op_other_id` ASC, `op_product_id` ASC),
  CONSTRAINT `fk_op_other`
    FOREIGN KEY (`op_other_id`)
    REFERENCES `documentator`.`other_expenses` (`other_expenses_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_op_product`
    FOREIGN KEY (`op_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`solution`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`solution` ;

CREATE TABLE IF NOT EXISTS `documentator`.`solution` (
  `solution_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `solution_title` VARCHAR(255) NOT NULL,
  `solution_desc` VARCHAR(255) NULL,
  PRIMARY KEY (`solution_id`),
  UNIQUE INDEX `solution_id_UNIQUE` (`solution_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`sp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`sp` ;

CREATE TABLE IF NOT EXISTS `documentator`.`sp` (
  `sp_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `sp_solution_id` INT(10) UNSIGNED NOT NULL,
  `sp_product_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`sp_id`),
  UNIQUE INDEX `sp_id_UNIQUE` (`sp_id` ASC),
  INDEX `fk_sp_solution_idx` (`sp_solution_id` ASC),
  INDEX `fk_sp_product_idx` (`sp_product_id` ASC),
  UNIQUE INDEX `solution_product` (`sp_solution_id` ASC, `sp_product_id` ASC),
  CONSTRAINT `fk_sp_solution`
    FOREIGN KEY (`sp_solution_id`)
    REFERENCES `documentator`.`solution` (`solution_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sp_product`
    FOREIGN KEY (`sp_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`parameter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`parameter` ;

CREATE TABLE IF NOT EXISTS `documentator`.`parameter` (
  `parameter_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `parameter_title` VARCHAR(255) NOT NULL,
  `parameter_desc` VARCHAR(255) NULL,
  PRIMARY KEY (`parameter_id`),
  UNIQUE INDEX `parameter_id_UNIQUE` (`parameter_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `documentator`.`papr`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `documentator`.`papr` ;

CREATE TABLE IF NOT EXISTS `documentator`.`papr` (
  `papr_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `papr_parameter_id` INT(10) UNSIGNED NOT NULL,
  `papr_product_id` INT(10) UNSIGNED NOT NULL,
  `papr_value` VARCHAR(45) NULL,
  `papr_unit_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`papr_id`),
  UNIQUE INDEX `papr_id_UNIQUE` (`papr_id` ASC),
  INDEX `fk_papr_parameter_idx` (`papr_parameter_id` ASC),
  INDEX `fk_papr_product_idx` (`papr_product_id` ASC),
  INDEX `fk_papr_unit_idx` (`papr_unit_id` ASC),
  UNIQUE INDEX `product_parameter` (`papr_parameter_id` ASC, `papr_product_id` ASC),
  CONSTRAINT `fk_papr_parameter`
    FOREIGN KEY (`papr_parameter_id`)
    REFERENCES `documentator`.`parameter` (`parameter_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_papr_product`
    FOREIGN KEY (`papr_product_id`)
    REFERENCES `documentator`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_papr_unit`
    FOREIGN KEY (`papr_unit_id`)
    REFERENCES `documentator`.`unit` (`unit_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
